Tester sur NGINX :
- envoyer un signal au serveur depuis le terminal, afin d'utiliser le server_name
- mettre plusieurs ports differents dans la directive "listen" (est-ce que les deux ports sont ecoutes ou est-ce qu'il y a une erreur...?)
- que veut dire la commande cgi-pass et cgi-param ?

Questions :
- Est-ce qu'un socket peut ecouter plusieurs ports ?

Tester 42 :
- creer les dossiers et fichiers demandes par le tester de 42

Implementation :
- Decider de la structure des classes (Une classe principale qui a autant d'instanciation de classes "Servers" qui ont eux-memes une instanciation de classe "Socket"...?)
- Decider dans quelle classe sera parser le configuration file
- Decider dans quelle classe seront creees les sockets
- Decider dans quelle classe seront regroupes tous les serveurs
- De quelles informations a besoin un serveur
- Vers quelle classe envoyer les requetes clients
- Comment parser les requetes clients, quelles sont les informations importantes
- Chercher dans les fichiers le fichier demande -> quelle classe a l'information 'root' et quelle classe s'occupe de trouver le fichier ou renvoyer l'erreur s'il y en a une
- Une fois le fichier trouve ou pas, creer une reponse http -> quelle classe s'en occupe, de quelles informations a-t-elle besoin
- Quelle classe s'occupe de renvoyer la reponse http, de quelles informations a-t-elle besoin
- Se renseigner sur le cgi
